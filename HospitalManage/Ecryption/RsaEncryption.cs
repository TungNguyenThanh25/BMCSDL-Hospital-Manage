using System.Security.Cryptography;
using System.Text;
namespace HospitalManage.Encryp { public class RsaEncryption { private readonly RSAParameters _publicKey; private readonly RSAParameters _privateKey; public RsaEncryption(RSAParameters publicKey, RSAParameters privateKey) { _publicKey = publicKey; _privateKey = privateKey; } public string Encrypt(string plainText) { var bytes = Encoding.UTF8.GetBytes(plainText); using var rsa = RSA.Create(); rsa.ImportParameters(_publicKey); var encrypted = rsa.Encrypt(bytes, RSAEncryptionPadding.Pkcs1); return Convert.ToBase64String(encrypted); } public string Decrypt(string encryptedText) { var bytes = Convert.FromBase64String(encryptedText); using var rsa = RSA.Create(); rsa.ImportParameters(_privateKey); var decrypted = rsa.Decrypt(bytes, RSAEncryptionPadding.Pkcs1); return Encoding.UTF8.GetString(decrypted); } } }